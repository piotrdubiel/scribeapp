import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.7.+'
        classpath 'com.squareup.gradle:gradle-android-test-plugin:0.9.1-SNAPSHOT'
    }
}

apply plugin: 'android-library'
apply plugin: 'android-test'

dependencies {
    repositories {
        mavenCentral()
    }
    compile 'com.android.support:appcompat-v7:+'

    def nativeLibs = new File("$buildDir/native-libs")
    if (!nativeLibs.exists()) {
        nativeLibs.mkdirs()
    }
    new File("$nativeLibs/native-libs.jar").createNewFile()

    compile files('libs/native-libs.jar')

    testCompile 'junit:junit:4.10'
    testCompile 'org.robolectric:robolectric:2.1.+'
    testCompile 'com.squareup:fest-android:1.0.+'
}

android {
    compileSdkVersion 19
    buildToolsVersion '19.0.0'
    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 19
    }

    lintOptions {
        abortOnError false
    }
}

task copyNative(type: Jar, dependsOn: 'makeNative') {
    from("${project.projectDir}/libs/") {
        include("**/*.so")
    }
    into("lib/")
    destinationDir(new File("${project.projectDir}/libs/"))
    archiveName("native-libs.jar")

}

task makeNative(type: Exec) {
    description "Builds NDK with BLAS included"
    workingDir "${project.projectDir}/jni/"

    if (System.env.NDK_ROOT != null) {
        def base_command = 'ndk-build'
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            base_command += '.cmd'
        }
        ndk_build = new File(System.env.NDK_ROOT, base_command)

        executable ndk_build
    }
    else {
        executable '/opt/android-ndk/ndk-build'
    }
}

tasks.withType(JavaCompile) { compileTask -> compileTask.dependsOn copyNative }

tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
    pkgTask.jniFolders = [new File(buildDir, 'native-libs')]
}